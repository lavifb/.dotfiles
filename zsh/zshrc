#
# Executes commands at the start of an interactive session.
#
# Authors:
#	Lavi Blumberg <lavifb@gmail.com>
#

# zmodload zsh/zprof

# fix base-16 colors
~/.zscripts/base16-tomorrow-night.sh

######################
# ZPLUG
export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh

zplug "zsh-users/zsh-completions"

zplug "zsh-users/zsh-syntax-highlighting", defer:3

zplug 'esc/conda-zsh-completion'

# zplug 'zplug/zplug', hook-build:'zplug --self-manage', defer:2

# ask to install uninstalled plugins
#if ! zplug check --verbose; then
#    printf "Install? [y/N]: "
#    if read -q; then
#        echo; zplug install
#    fi
#fi

zplug load
# END ZPLUG
######################

######################
# PROMPT
autoload -Uz vcs_info

zstyle ':vcs_info:*' stagedstr '%F{2}●'
zstyle ':vcs_info:*' unstagedstr '%F{1}●'
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{136}%r'
zstyle ':vcs_info:*' enable git svn
precmd () {
    # check for untracked files in git
    if [[ -z $(git ls-files --other --exclude-standard 2> /dev/null) ]] {
        zstyle ':vcs_info:*' formats ' [%F{yellow}%b%c%u%f]'
    } else {
        zstyle ':vcs_info:*' formats ' [%F{yellow}%b%c%u%F{5}●%f]'
    }

    vcs_info
}

setopt prompt_subst
PROMPT='%F{yellow}%n%f:%F{blue}%~%f${vcs_info_msg_0_} %(?/%F{white}/%F{red})∮ %f'

VIM_PROMPT="%F{green}[NORMAL]%f"


# Show when in vi NORMAL mode
function zle-line-init zle-keymap-select {
    zle reset-prompt
    zle -R
}

# Redraw prompt when window is resized
TRAPWINCH() {
    zle && { zle reset-prompt; zle -R }
}

function vi_mode_indicator {
    echo "${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}"
}

zle -N zle-line-init
zle -N zle-keymap-select
export KEYTIMEOUT=1

RPROMPT='$(vi_mode_indicator)'
# END PROMPT
######################

# ZSH COMPLETIONS
#####################
#autoload -Uz compinit && compinit -i

# Options
setopt COMPLETE_IN_WORD    # Complete from both ends of a word.
setopt ALWAYS_TO_END       # Move cursor to the end of a completed word.
setopt PATH_DIRS           # Perform path search even on command names with slashes.
setopt AUTO_MENU           # Show completion menu on a successive tab press.
setopt AUTO_LIST           # Automatically list choices on ambiguous completion.
setopt AUTO_PARAM_SLASH    # If completed parameter is a directory, add a trailing slash.

# Case-insensitive (all), partial-word, and then substring completion.
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Group matches and describe.
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes

# Don't complete unavailable commands.
zstyle ':completion:*:functions' ignored-patterns '(_*|pre(cmd|exec))'

# Cache completions
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path "${HOME}/.zcompcache"

# History
zstyle ':completion:*:history-words' stop yes
zstyle ':completion:*:history-words' remove-all-dups yes
zstyle ':completion:*:history-words' list false
zstyle ':completion:*:history-words' meanu yes

# END COMPLETIONS
####################

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

alias cask='brew cask'
alias rm='rm -i'

alias gcm='git commit -m'
alias gam='git commit -am'
alias gc='git commit'
alias gp='git push'
alias gll='git pull'
alias gr='git reset'
alias ghh='git reset HEAD --hard'
alias gs='git status'
alias gch='git checkout'
alias gmr='git merge'
alias gb='git branch'
alias gd='git diff'

# fix nvim correct
alias nvim='nocorrect nvim'

# python3
alias py3='python3'

# leasot for todos
alias todos='leasot -S **/*'

# vim shortcuts in shell
bindkey -v

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# bind keys to get them to work
bindkey "^[[3~" delete-char
bindkey "^[[H"  beginning-of-line
bindkey "^[[1~" beginning-of-line # for tmux
bindkey "^[[F"  end-of-line
bindkey "^[[4~" end-of-line       # for tmux
bindkey "^[[5~" up-line-or-search
bindkey "^[[6~" down-line-or-search


# turn on colors for ls
export CLICOLOR=1

# put casks in ~/Applications
export HOMEBREW_CASK_OPTS="--appdir=~/Applications"

export PATH="$PATH:$HOME/.utils" # Add my own shell scripts
export PATH="$PATH:$HOME/miniconda3/bin" # Add anaconda

# MKL Variables
export MKLROOT="/opt/intel/mkl"
export DYLD_LIBRARY_PATH="/opt/intel/tbb/lib:/opt/intel/lib:/opt/intel/mkl/lib:$DYLD_LIBRARY_PATH"
export LIBRARY_PATH="/opt/intel/tbb/lib:/opt/intel/lib:/opt/intel/mkl/lib:$LIBRARY_PATH"
export NLSPATH="/opt/intel/mkl/lib/locale/%l_%t/%N"
export CPATH="$MKLROOT/include:$CPATH"

# zprof
